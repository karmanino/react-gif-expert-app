{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","href","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,oBAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEKJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCMZG,EAfG,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEXC,EAFW,iDAEqCC,UAAUH,GAF/C,+DAGEI,MAAMF,GAHR,cAGXG,EAHW,gBAIGA,EAAKC,OAJR,uBAIVC,EAJU,EAIVA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATtB,kBAYVL,GAZU,4CAAH,sDCETQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,qBAAKK,UAAU,QAAf,SAAuB,4BAAIL,UCH1BQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OApBAC,qBAAW,WAEPzB,EAAQC,GACPyB,MAAM,SAAAC,GAKAH,EAAS,CACRhB,KAAMmB,EACNL,SAAS,SAMlB,CAACrB,IAIGsB,EDvBwBK,CAAa3B,GAAhCc,EAHuB,EAG5BP,KAAac,EAHe,EAGfA,QAIpB,OACI,qCACA,oBAAIJ,UAAU,mCAAd,SAAkDjB,IAEjDqB,GAAW,yCAEV,qBAAKJ,UAAU,YAAf,SAEUH,EAAOL,KAAK,SAAEC,GAAF,OACR,wBAAC,EAAD,2BACIA,GADJ,IAEAkB,IAAKlB,EAAIC,eElBpBkB,EAAe,WAAO,IAAD,EAEK3C,mBAAS,CAAC,eAFf,mBAEvBQ,EAFuB,KAEZT,EAFY,KAI9B,OACI,qCACA,+CAAsB,qFAEtB,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEQS,EAAWe,KAAK,SAAAT,GACR,OAAO,cAAC,EAAD,CAASA,SAAUA,GAAeA,MAGrD,sEAAqC,mBAAG8B,KAAK,sBAAR,iC,MCfjDC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.305f55a6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('Better Call Saul');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n            if(inputValue.trim().length > 2){\r\n            \r\n            setCategories( categories => ([inputValue, ...categories])  );\r\n            setinputValue('');\r\n        } \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= {handleInputChange} \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","   export const getGif = async( category ) => {\r\n\r\n        const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MfW8JvEbJa7UIc8qOwEZ9ekIbsGntaWg`;\r\n        const resp = await fetch(URL);\r\n        const {data}= await resp.json();\r\n        const gifs = data.map( img => {\r\n            return {\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images?.downsized_medium.url   \r\n            }  \r\n        })\r\n        return gifs;\r\n    }\r\n\r\n    export default getGif;\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <div className=\"title\"><p>{title}</p></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n\r\n        {loading && <p> loading</p>}\r\n\r\n       {  <div className=\"card-grid\">   \r\n                {\r\n                    images.map( ( img ) => ( \r\n                        <GifGridItem \r\n                        {...img}\r\n                        key={img.id}\r\n                        />\r\n                    )\r\n                    )\r\n                }\r\n\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport getGif from '../components/helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif( category )\r\n        .then( imgs => {\r\n\r\n\r\n\r\n               \r\n               setState({\r\n                data: imgs,\r\n                loading: false,\r\n               });\r\n\r\n\r\n        });\r\n\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state; // { data: [], loading:true }\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['The Office']);\r\n\r\n    return(\r\n        <>\r\n        <h2>Gif Fetch App</h2><span>| Simple app made with React to fetch gifs online</span>\r\n\r\n        <AddCategory setCategories={setCategories} />\r\n\r\n        <hr />\r\n            { \r\n                categories.map( category => {\r\n                        return <GifGrid category={category} key={category}/>\r\n                })\r\n            }\r\n            <footer>Made by Juan Jos√© Armanino | <a href='http://armanino.dev'>armanino.dev</a></footer>\r\n        </>\r\n        \r\n    );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n// GifExpertApp\n// <h2>GiftExpertApp</h2>\n// <hr/>\n\n"],"sourceRoot":""}